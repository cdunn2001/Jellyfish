project(
  'jellyfish',
  'cpp', 'c',
  version : '0.1.0',
  default_options : [
    'buildtype=release',
    'warning_level=3',
    'cpp_std=c++11',
    'b_ndebug=if-release'],
  license : 'MIT',
  meson_version : '>= 0.52.0',
)
#add_global_arguments('-DHAVE_CONFIG_H', language : 'c')
add_global_arguments('-DHAVE_CONFIG_H', language : 'cpp')
proj_sources = [
    'jellyfish/mersenne.cpp',
    'lib/jsoncpp.cpp',
    'jellyfish/backtrace.cc',
    'jellyfish/merge_files.cc',
    'jellyfish/dbg.cc',
    'lib/thread_exec.cc',
    'lib/int128.cc',
    'lib/rectangular_binary_matrix.cc',
    #'lib/err.cc',
    'lib/generator_manager.cc',
    'lib/storage.cc',
    'lib/mer_dna.cc',
    'lib/misc.cc',
    'lib/time.cc',
    'lib/allocators_mmap.cc',
]
main_sources = [
    'jellyfish/fastq2sam.cc',
    'jellyfish/generate_sequence.cc',
    'sub_commands/mem_main.cc',
    'sub_commands/cite_main.cc',
    'sub_commands/info_main.cc',
    'sub_commands/bc_main.cc',
    'sub_commands/query_main.cc',
    'sub_commands/merge_main.cc',
    'sub_commands/histo_main.cc',
    'sub_commands/stats_main.cc',
    'sub_commands/jellyfish.cc',
    'sub_commands/dump_main.cc',
    'sub_commands/count_main.cc',
    'examples/count_in_file/count_in_file.cc',
    'examples/query_per_sequence/query_per_sequence.cc',
    'examples/jf_count_dump/jf_count_dump.cc',
]
test_sources = [
    'unit_tests/test_dumpers.cc',
    'unit_tests/test_large_block.cc',
    'unit_tests/test_hash_counter.cc',
    'unit_tests/test_mapped_file.cc',
    'unit_tests/test_square_binary_matrix.cc',
    'unit_tests/test_token_ring.cc',
    'unit_tests/test_main.cc',
    'unit_tests/test_mer_iterator.cc',
    'unit_tests/test_allocators_mmap.cc',
    'unit_tests/test_atomic_bits_array.cc',
    'unit_tests/test_cond.cc',
    'unit_tests/test_mer_dna_bloom_counter.cc',
    'unit_tests/test_file_header.cc',
    'unit_tests/test_offsets_key_value.cc',
    'unit_tests/test_packed_key_value_array.cc',
    'unit_tests/test_stdio_filebuf.cc',
    'unit_tests/test_int128.cc',
    'unit_tests/test_whole_sequence_parser.cc',
    'unit_tests/test_mer_dna.cc',
    'unit_tests/gtest/src/gtest_main.cc',
    'unit_tests/gtest/src/gtest-all.cc',
    'unit_tests/test_stream_iterator.cc',
    'unit_tests/test_text_dumper.cc',
    'unit_tests/test_mutex.cc',
    'unit_tests/test_mer_overlap_sequence_parser.cc',
    'unit_tests/test_large_hash_array.cc',
    'unit_tests/test_simple_circular_buffer.cc',
    'unit_tests/test_rectangular_binary_matrix.cc',
    'unit_tests/test_cooperative_pool2.cc',
    'unit_tests/test_generator_manager.cc',
    'unit_tests/test_mer_heap.cc',
    'unit_tests/test_misc.cc',
]
proj_lib = library('jellyfish',
  sources : proj_sources,
  include_directories : ['include'],
  dependencies : [],
  install : true,
)
install_headers(
  'include/jellyfish/allocators_mmap.hpp',
  'include/jellyfish/atomic_bits_array.hpp',
  'include/jellyfish/atomic_field.hpp',
  'include/jellyfish/atomic_gcc.hpp',
  'include/jellyfish/backtrace.hpp',
  'include/jellyfish/binary_dumper.hpp',
  'include/jellyfish/bloom_common.hpp',
  'include/jellyfish/bloom_counter2.hpp',
  'include/jellyfish/bloom_filter.hpp',
  'include/jellyfish/circular_buffer.hpp',
  'include/jellyfish/compare_and_swap.hpp',
  'include/jellyfish/cooperative_pool.hpp',
  'include/jellyfish/cooperative_pool2.hpp',
  'include/jellyfish/cpp_array.hpp',
  'include/jellyfish/divisor.hpp',
  'include/jellyfish/dumper.hpp',
  'include/jellyfish/err.hpp',
  'include/jellyfish/file_header.hpp',
  'include/jellyfish/generator_manager.hpp',
  'include/jellyfish/generic_file_header.hpp',
  'include/jellyfish/hash_counter.hpp',
  'include/jellyfish/int128.hpp',
  'include/jellyfish/jellyfish.hpp',
  'include/jellyfish/json.h',
  'include/jellyfish/large_hash_array.hpp',
  'include/jellyfish/large_hash_iterator.hpp',
  'include/jellyfish/locks_pthread.hpp',
  'include/jellyfish/mapped_file.hpp',
  'include/jellyfish/mer_dna.hpp',
  'include/jellyfish/mer_dna_bloom_counter.hpp',
  'include/jellyfish/mer_heap.hpp',
  'include/jellyfish/mer_iterator.hpp',
  'include/jellyfish/mer_overlap_sequence_parser.hpp',
  'include/jellyfish/mer_qual_iterator.hpp',
  'include/jellyfish/misc.hpp',
  'include/jellyfish/offsets_key_value.hpp',
  'include/jellyfish/parser_common.hpp',
  'include/jellyfish/rectangular_binary_matrix.hpp',
  'include/jellyfish/sam_format.hpp',
  'include/jellyfish/simple_circular_buffer.hpp',
  'include/jellyfish/sorted_dumper.hpp',
  'include/jellyfish/stdio_filebuf.hpp',
  'include/jellyfish/storage.hpp',
  'include/jellyfish/stream_iterator.hpp',
  'include/jellyfish/stream_manager.hpp',
  'include/jellyfish/text_dumper.hpp',
  'include/jellyfish/thread_exec.hpp',
  'include/jellyfish/time.hpp',
  'include/jellyfish/token_ring.hpp',
  'include/jellyfish/whole_sequence_parser.hpp',
  subdir : 'jellyfish'
)
proj_dep = declare_dependency(
  include_directories : ['include'],
  link_with : proj_lib
)
pkg = import('pkgconfig')
pkg.generate(proj_lib,
  description : 'Fast, memory-efficient counting of DNA k-mers',
)
